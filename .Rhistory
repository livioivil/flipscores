library(flipscores)
library(MASS)
library(foreach)
library(doParallel)
library(mvtnorm)
#CASO POISSON
n=100
B=5000
set.seed(1234567)
matrixcor<-matrix(c(1.0,  0.1,  0.5,  0.5,
0.1,  1.0,  0.1,  0.1,
0.5,  0.1,  1.0,  0.1,
0.5,  0.1,  0.1,  1.0),4,4)
dati<-data.frame(mvrnorm(n,c(0,0,0,0), Sigma = matrixcor))
colnames(dati)<-c("X","Z", "Z1", "Z2")
betacoeff<-c(1,1,1,2)
dati$Y=rpois(n,lambda=exp(betacoeff[1]*dati$X+betacoeff[2]*dati$Z+betacoeff[3]*dati$Z1+betacoeff[4]*dati$Z2))
mod1=flipscores(Y~X+Z+Z1+Z2,data=dati,family="poisson"(link="log"))
summary(mod1)
set.seed(1)
FLIPS=make_flips(n_obs=nrow(mod1$scores),n_flips=mod1$flip_param_call$n_flips)
FLIPS=make_flips(n_obs=nrow(mod1$scores),n_flips=mod1$flip_param_call$n_flips)
mod1=flipscores(Y~X+Z+Z1+Z2,data=dati,family="poisson"(link="log"),flips=FLIPS)
set.seed(1)
FLIPS=make_flips(n_obs=nrow(mod1$scores),n_flips=mod1$flip_param_call$n_flips)
mod1=flipscores(Y~X+Z+Z1+Z2,data=dati,family="poisson"(link="log"),flips=FLIPS)
summary(mod1)
mod2=flipscores(mod1,flips=FLIPS)
summary(mod2)
mod1=flipscores(Y~X+Z+Z1+Z2,data=dati,family="poisson"(link="log"))
summary(mod1)
set.seed(1)
FLIPS=make_flips(n_obs=nrow(mod1$scores),n_flips=mod1$flip_param_call$n_flips)
PVal.Flip=function(mod, betaH0=0,x="Z2", alternative="less", B=5000, flips=FLIPS) {
xvals=model.matrix(mod)[,x]
as.numeric(flipscores(mod$formula,mod$family,mod$data,offset=betaH0*xvals,to_be_tested = x,
flips=flips, alternative=alternative)$p.values)
}
mod.glm=glm(Y~X+Z+Z1+Z2,data=dati,family="poisson")
mod.fs1=flipscores(mod.glm)
mod.fs2=flipscores(formula=mod.glm$formula, family=mod.glm$family, data=mod.glm$data)
summary(mod.fs1)
summary(mod.fs2)
PVal.Flip(mod.fs1, betaH0 = 1.9)
mod.fs1=flipscores(mod.glm)
mod.fs2=flipscores(formula=mod.glm$formula, family=mod.glm$family, data=mod.glm$data)
summary(mod.fs1)
summary(mod.fs2)
PVal.Flip(mod.fs1, betaH0 = 1.9)
library(flipscores)
library(MASS)
library(foreach)
library(doParallel)
library(mvtnorm)
#CASO POISSON
n=100
B=5000
set.seed(1234567)
matrixcor<-matrix(c(1.0,  0.1,  0.5,  0.5,
0.1,  1.0,  0.1,  0.1,
0.5,  0.1,  1.0,  0.1,
0.5,  0.1,  0.1,  1.0),4,4)
dati<-data.frame(mvrnorm(n,c(0,0,0,0), Sigma = matrixcor))
colnames(dati)<-c("X","Z", "Z1", "Z2")
betacoeff<-c(1,1,1,2)
dati$Y=rpois(n,lambda=exp(betacoeff[1]*dati$X+betacoeff[2]*dati$Z+betacoeff[3]*dati$Z1+betacoeff[4]*dati$Z2))
set.seed(1)
FLIPS=make_flips(n_obs=nrow(mod1$scores),n_flips=mod1$flip_param_call$n_flips)
mod1=flipscores(Y~X+Z+Z1+Z2,data=dati,family="poisson"(link="log"),flips=FLIPS)
summary(mod1)
mod2=flipscores(mod1,flips=FLIPS)
summary(mod2)
mod1=flipscores(Y~X+Z+Z1+Z2,data=dati,family="poisson"(link="log"))
summary(mod1)
set.seed(1)
FLIPS=make_flips(n_obs=nrow(mod1$scores),n_flips=mod1$flip_param_call$n_flips)
PVal.Flip=function(mod, betaH0=0,x="Z2", alternative="less", B=5000, flips=FLIPS) {
xvals=model.matrix(mod)[,x]
as.numeric(flipscores(mod$formula,mod$family,mod$data,offset=betaH0*xvals,to_be_tested = x,
flips=flips, alternative=alternative)$p.values)
}
mod.glm=glm(Y~X+Z+Z1+Z2,data=dati,family="poisson")
mod.fs1=flipscores(mod.glm)
mod.fs2=flipscores(formula=mod.glm$formula, family=mod.glm$family, data=mod.glm$data)
summary(mod.fs1)
summary(mod.fs2)
PVal.Flip(mod.fs1, betaH0 = 1.9)
PVal.Flip(mod.fs1, betaH0 = 2.1)
#diversi da
PVal.Flip(mod.fs2, betaH0 = 1.9)
PVal.Flip(mod.fs2, betaH0 = 2.1)
PVal.Flip=function(mod, betaH0=0,x="Z2", alternative="less", B=5000, flips=FLIPS) {
xvals=model.matrix(mod)[,x]
as.numeric(flipscores(mod,offset=betaH0*xvals,to_be_tested = x,
flips=flips, alternative=alternative)$p.values)
}
PVal.Flip(mod.fs1, betaH0 = 1.9)
PVal.Flip(mod.fs1, betaH0 = 2.1)
#diversi da
PVal.Flip(mod.fs2, betaH0 = 1.9)
PVal.Flip(mod.fs2, betaH0 = 2.1)
#diversi da
PVal.Flip(mod.fs2, betaH0 = 0)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -2)
PVal.Flip(mod.fs2, betaH0 = 2.1)
mod.fs2$p.values
PVal.Flip(mod.fs2, betaH0 = 2.1, alternative="greater")
PVal.Flip(mod.fs2, betaH0 = 21, alternative="greater")
PVal.Flip(mod.fs2, betaH0 = 210, alternative="greater")
mod.fs2
PVal.Flip=function(mod, betaH0=0,x="Z2", alternative="less", B=5000, flips=FLIPS) {
xvals=model.matrix(mod)[,x]
as.numeric(update(mod,offset=betaH0*xvals,to_be_tested = x,
flips=flips, alternative=alternative)$p.values)
}
PVal.Flip(mod.fs1, betaH0 = 1.9)
PVal.Flip(mod.fs1, betaH0 = 2.1)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -2)
PVal.Flip(mod.fs2, betaH0 = 2.1)
mod.fs1
mod.fs2
PVal.Flip(mod.fs2, betaH0 = 2.1)
PVal.Flip(mod.fs2, betaH0 = 1.99153144)
PVal.Flip(mod.fs2, betaH0 = -1.99153144)
PVal.Flip=function(mod, betaH0=0,x="Z2", alternative="less", B=5000, flips=FLIPS) {
xvals=model.matrix(mod)[,x]
as.numeric(update(mod,offset=-betaH0*xvals,to_be_tested = x,
flips=flips, alternative=alternative)$p.values)
}
mod.glm=glm(Y~X+Z+Z1+Z2,data=dati,family="poisson")
mod.fs1=flipscores(mod.glm)
mod.fs2=flipscores(formula=mod.glm$formula, family=mod.glm$family, data=mod.glm$data)
summary(mod.fs1)
summary(mod.fs2)
PVal.Flip(mod.fs1, betaH0 = 1.9)
PVal.Flip(mod.fs1, betaH0 = 2.1)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -2)
PVal.Flip(mod.fs2, betaH0 = 2.1)
PVal.Flip(mod.fs1, betaH0 = -20)
PVal.Flip(mod.fs1, betaH0 = 2.1)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -20)
PVal.Flip(mod.fs2, betaH0 = 2.1)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -5)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -3)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -2)
#diversi da
PVal.Flip(mod.fs2, betaH0 = -3)
PVal.Flip(mod.fs2, betaH0 = 2.1)
coefficients(mod.fs2)
PVal.Flip(mod.fs2, betaH0 = coefficients(mod.fs2)["Z2"])
PVal.Flip(mod.fs1, betaH0 = coefficients(mod.fs2)["Z2"])
PVal.Flip(mod.fs1, betaH0 = -3)
mod.fs1=flipscores(mod.glm,flips = FLIPS)
mod.fs2=flipscores(formula=mod.glm$formula, family=mod.glm$family, data=mod.glm$data,flips=FLIPS)
summary(mod.fs1)
summary(mod.fs2)
PVal.Flip(mod.fs1, betaH0 = -3)
library(flipscores)
library(MASS)
library(foreach)
library(doParallel)
library(mvtnorm)
#CASO POISSON
n=100
B=5000
set.seed(1234567)
matrixcor<-matrix(c(1.0,  0.1,  0.5,  0.5,
0.1,  1.0,  0.1,  0.1,
0.5,  0.1,  1.0,  0.1,
0.5,  0.1,  0.1,  1.0),4,4)
dati<-data.frame(mvrnorm(n,c(0,0,0,0), Sigma = matrixcor))
colnames(dati)<-c("X","Z", "Z1", "Z2")
betacoeff<-c(1,1,1,2)
dati$Y=rpois(n,lambda=exp(betacoeff[1]*dati$X+betacoeff[2]*dati$Z+betacoeff[3]*dati$Z1+betacoeff[4]*dati$Z2))
mod1=flipscores(Y~X+Z+Z1+Z2,data=dati,family="poisson"(link="log"))
summary(mod1)
set.seed(1)
FLIPS=make_flips(n_obs=nrow(mod1$scores),n_flips=mod1$flip_param_call$n_flips)
PVal.Flip=function(mod, betaH0=0,x="Z2", alternative="less", B=5000, flips=FLIPS) {
xvals=model.matrix(mod)[,x]
as.numeric(update(mod,offset=-betaH0*xvals,to_be_tested = x,
flips=flips, alternative=alternative)$p.values)
}
mod.glm=glm(Y~X+Z+Z1+Z2,data=dati,family="poisson")
mod.fs1=flipscores(mod.glm,flips = FLIPS)
mod.fs2=flipscores(formula=mod.glm$formula, family=mod.glm$family, data=mod.glm$data,flips=FLIPS)
summary(mod.fs1)
summary(mod.fs2)
PVal.Flip(mod.fs1, betaH0 = -3)
PVal.Flip(mod.fs1, betaH0 = coefficients(mod.fs2)["Z2"])
#diversi da
PVal.Flip(mod.fs2, betaH0 = -3)
PVal.Flip(mod.fs2, betaH0 = coefficients(mod.fs2)["Z2"])
