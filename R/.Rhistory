n_flips=3
dim(n_flips)
is.scalar(n_flips)
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
set.seed(1)
dt=data.frame(X=rnorm(20),
Z=factor(rep(LETTERS[1:3],length.out=20)))
dt$Y=rpois(n=20,lambda=exp(dt$Z=="C"))
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
library(flipscores)
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
str(mod$scores)
debug(flipscores)
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
str(results)
debug(socket_compute_scores)
results = lapply(to_be_tested, socket_compute_scores_and_flip,
model, flip_param_call = flip_param_call)
debug(compute_scores)
std_dev = .get_std_dev_score(model0, X)
std_dev
scores
attr(scores, "sd") = std_dev
scores
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
undebug(flipscores:::socket_compute_scores)
debug(flipscores:::socket_compute_scores_and_flip)
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
undebug(flipscores::compute_scores)
undebug(flipscores::flipscores)
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
str(scores)
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
library(flipsc)
library(flipscores)
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
mod=flipscores(Y~Z+X,data=dt,family="poisson",n_flips=1000)
str(mod)
debug(summary.flipscores)
debug(flipscores:::summary.flipscores)
summary(mod)
object$scores
str(object$scores)
attributes(object$scores)
attributes(object$scores)$sd
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
str(mod)
summary(mod)
list.of.packages <- c("flipscores","jointest","flip","foreach","doParallel","parallel","plyr")
new.packages <- list.of.packages[!(list.of.packages %in% installed.packages()[,"Package"])]
if("flipscores"%in%new.packages){
devtools::install_github("livioivil/flipscores")
new.packages=setdiff(new.packages,"flipscores")
}
if("jointest"%in%new.packages){
devtools::install_github("livioivil/jointest")
new.packages=setdiff(new.packages,"jointest")
}
if(length(new.packages)>0){
install.packages(new.packages)
}
library(doParallel)
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
devtools::install("C:\\Users\\livio\\OneDrive\\Documenti\\github\\flipscores")
load("G:/My Drive/lavorincorso/PIMA/simulations/results/res_sim_gaussian_MCMC5000_B100_nfl1000_n100_betas0.1_1_1_1_1_1_1_1_1_1_rho0.4_error.homo_startseed0_scoretypestandardized_contin.Rdata")
summaryResSim(res)
library(r41sqrt10)
summaryResSim(res)
devtools::install_github("emeyers/NeuroDecodeR")
library("NeuroDecodeR")
ds_basic
fp_zscore
260000^2
.05/6
.05/3
##################### 3.1: One Endpoint
(p40_EPS=wilcox.test( unlist(D[5,4:15]- D[8,4:15])))
